# Generated by Django 4.2.3 on 2025-05-02 17:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AISummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=600)),
                ('actions', models.CharField(max_length=400)),
                ('description', models.CharField(max_length=400)),
                ('actions_date', models.DateField(verbose_name='action date')),
                ('congress', models.IntegerField(null=True)),
                ('bill_type', models.CharField(max_length=5, null=True)),
                ('bill_number', models.CharField(max_length=10, null=True)),
                ('url', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('user_name', models.CharField(max_length=255)),
                ('auth0_id', models.CharField(max_length=255)),
                ('likes', models.IntegerField(default=0)),
                ('dislikes', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expertise_tags', models.JSONField(blank=True, default=list)),
                ('bill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='websrv.bill')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Cosponsor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bioguide_id', models.CharField(max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100)),
                ('full_name', models.CharField(max_length=255)),
                ('party', models.CharField(max_length=10)),
                ('state', models.CharField(max_length=5)),
                ('district', models.IntegerField(blank=True, null=True)),
                ('is_original_cosponsor', models.BooleanField()),
                ('sponsorship_date', models.DateField()),
                ('url', models.URLField()),
                ('img_url', models.URLField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Summary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Text',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auth0_id', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('avatar', models.URLField(blank=True)),
                ('expertise_tags', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('blocked_users', models.ManyToManyField(blank=True, related_name='blocked_by', to='websrv.user')),
                ('followed_reps', models.ManyToManyField(related_name='followers', to='websrv.cosponsor')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='websrv.user')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='bill',
            name='cosponsors',
            field=models.ManyToManyField(related_name='bills', to='websrv.cosponsor'),
        ),
        migrations.AddField(
            model_name='bill',
            name='summary',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='websrv.summary'),
        ),
        migrations.AddField(
            model_name='bill',
            name='text',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='websrv.text'),
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to='websrv.user')),
                ('following', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to='websrv.user')),
            ],
            options={
                'unique_together': {('follower', 'following')},
            },
        ),
        migrations.CreateModel(
            name='CommentInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auth0_id', models.CharField(max_length=255)),
                ('interaction_type', models.CharField(choices=[('like', 'Like'), ('dislike', 'Dislike')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interactions', to='websrv.comment')),
            ],
            options={
                'unique_together': {('comment', 'auth0_id')},
            },
        ),
        migrations.CreateModel(
            name='BillView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('viewed_at', models.DateTimeField(auto_now_add=True)),
                ('bill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='websrv.bill')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bill_views', to='websrv.user')),
            ],
            options={
                'ordering': ['-viewed_at'],
                'unique_together': {('user', 'bill')},
            },
        ),
        migrations.CreateModel(
            name='BillLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timnestamp', models.DateTimeField(auto_now_add=True)),
                ('bill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likee', to='websrv.bill')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='liker', to='websrv.user')),
            ],
            options={
                'ordering': ['-timnestamp'],
                'unique_together': {('user', 'bill')},
            },
        ),
    ]
